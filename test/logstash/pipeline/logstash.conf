input {
	file {
		path => "/datasets/data.csv"
		start_position => "beginning"
	}
}

filter {

	 grok {

	    match => {
		 "message" => '%{IPORHOST:clientip} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}'
		}
	  }

# toto to parsuje ted
#220.181.108.96 - - [13/Jun/2015:21:14:28 +0000] "GET /blog/geekery/xvfb-firefox.html HTTP/1.1" 200 10975 "-" "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)"
#141.101.97.93      [07/Nov/2017:12:35:16 -0500] "GET /q/porsche-service-interval-reset HTTP/1.1" 404 9 "-" "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0"
# %{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}
# %{IPORHOST:clientip} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}



date{
		match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
#   	target => "dates-of-matches"
	}

}

output {
	stdout {
		codec => rubydebug }
	elasticsearch {
		hosts => "http://elasticsearch:9200"
		index => "muj_log"
	}
}
